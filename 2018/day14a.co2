
solution = function(input) {
	local capacity = input + 10;
	local recipes = array(capacity+1); 
	local recipe_count = 2;
	set(recipes, 0, 3);
	set(recipes, 1, 7);
	local first_elf = 0;
	local second_elf = 1;
	loop(recipe_count < capacity){
		local first = get(recipes, first_elf);
		local second = get(recipes, second_elf);
		local sum = first + second;
		if (sum < 10){
			set(recipes, recipe_count, sum);
			recipe_count = recipe_count + 1;
		} else {
			local tens = sum / 10;
			local ones = sum - tens * 10;
			set(recipes, recipe_count, tens);
			set(recipes, recipe_count + 1, ones);
			recipe_count = recipe_count + 2;
		}
		first_elf = first_elf + first + 1;
		second_elf = second_elf + second + 1;
		loop(first_elf >= recipe_count){ first_elf = first_elf - recipe_count }
		loop(second_elf >= recipe_count){ second_elf = second_elf - recipe_count }
	}
	local result = "0"*10;
	local char_zero = get("0",0);
	loop(local i=0, i<10, i=i+1){
		set(result, i, get(recipes, input + i) + char_zero);
	};
	return result;
};

cases = [
	{
		in: 5,
		out: "0124515891"
	},
	{
		in: 18,
		out: "9251071085"
	},
	{
		in: 2018,
		out: "5941429882"
	},
	{
		in: 320851,
		out: "7116398711"
	}
];
